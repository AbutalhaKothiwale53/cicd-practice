name: Node.js CI

on:
  push:
    branches: [ main ]
# Uncomment below to also trigger on PRs to main
#  pull_request:
#    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Run tests with coverage
        run: npm test -- --coverage  # ðŸ‘ˆ Ensures coverage folder is created

      # Optional: Simulate deployment
      # - name: Simulate deployment
      #   if: success()
      #   run: echo "Deployment successful (simulated)"

      - name: Upload code coverage
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage
          path: coverage/

      - name: Show environment variables
        run: echo "Environment is $MY_ENV_VAR"
        env: 
          MY_ENV_VAR: "Develop"
      - name: Use environment variable
        run: echo "Global var is $GLOBAL_ENV_VAR"

      - name: Use secret
        run: |
          echo "Using Secret API Key...."
          # For demonstration only: Never echo secrets in real workflows
          echo "API_KEY = ${{ secrets.API_KEY }}"
        env:
          API_KEY: ${{ secrets.API_KEY }}

      - name: Simulate deployment with secrets
        run: |
          echo "Deploying with token..."
          # Example deploying command using $DEPLOY_TOKEN (if you have added it)
        env:
          DEPLOY_TOKEN: ${{ secrets.DEPLOY_TOKEN }}
      
      - name: Deploy to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          npm install -g vercel
          vercel --prod --token $VERCEL_TOKEN --confirm --cwd .

